name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 9 * * 1'

jobs:
  sast:
    name: SAST Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint Security Scan
      run: |
        npm install --save-dev eslint-plugin-security
        npx eslint . --ext .js --config .eslintrc.security.js || true

    - name: Run npm audit for known vulnerabilities
      run: npm audit --audit-level moderate

    - name: Semgrep SAST Scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: p/security-audit

    - name: CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        languages: javascript

  sca:
    name: SCA Dependency Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit with detailed report
      run: |
        npm audit --json > npm-audit-report.json || true
        echo "npm audit completed"

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@v1.5.0
      with:
        project: 'express-auth-app'
        path: '.'
        format: 'HTML'
        args: >
          --enableRetired
          --failOnCVSS 7
          --scan node_modules
          --out reports

    - name: Upload Dependency Check Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/
        retention-days: 30

    - name: Run Snyk Security Scan
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        npm install -g snyk
        if [ -n "$SNYK_TOKEN" ]; then
          snyk test --severity-threshold=high
          snyk monitor
        else
          echo "Snyk token not set, skipping Snyk scan"
        fi

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Detect secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.pull_request.base.sha || 'HEAD^' }}
        head: HEAD

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [sast, sca, secret-scan]
    if: always()
    
    steps:
    - name: Security Summary
      run: |
        echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "### SAST: ${{ needs.sast.result }}" >> $GITHUB_STEP_SUMMARY
        echo "### SCA: ${{ needs.sca.result }}" >> $GITHUB_STEP_SUMMARY
        echo "### Secret Scan: ${{ needs.secret-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "Scans completed. Check individual job logs for details." >> $GITHUB_STEP_SUMMARY